<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>白茶清风</title>
  
  <subtitle>白茶清欢无别事，我在等风也等你</subtitle>
  <link href="https://blog.flechazo.site/atom.xml" rel="self"/>
  
  <link href="https://blog.flechazo.site/"/>
  <updated>2021-04-08T10:13:00.532Z</updated>
  <id>https://blog.flechazo.site/</id>
  
  <author>
    <name>Flipped</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>koa2使用MongoDB</title>
    <link href="https://blog.flechazo.site/posts/696a7195.html"/>
    <id>https://blog.flechazo.site/posts/696a7195.html</id>
    <published>2021-04-08T10:02:05.000Z</published>
    <updated>2021-04-08T10:13:00.532Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="通过koa-generate-快速生成ejs模板项目"><a href="#通过koa-generate-快速生成ejs模板项目" class="headerlink" title="通过koa generate 快速生成ejs模板项目"></a>通过koa generate 快速生成<code>ejs</code>模板项目</h2><p><code>koa2 -e koa-laern</code></p><p>安装<code>mongoose</code>模块<br><code>cnpm i mongoose -S</code></p><h2 id="写入配置信息"><a href="#写入配置信息" class="headerlink" title="写入配置信息"></a>写入配置信息</h2><ul><li>在根目录下新建<code>dbs</code>文件夹</li><li><code>dbs</code>文件夹下新建<code>config.js</code>，用于配置数据库的连接 ``</li><li><code>dbs</code>文件夹下创建<code>models</code>文件夹，储存模型文件</li><li><code>models</code>新建 <code>person.js</code></li></ul><p>config.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    dbs: <span class="string">&#x27;mongodb://121.36.144.103/dbs&#x27;</span> <span class="comment">// 如果是本地环境 地址为localhost</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>person.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> personSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    name: <span class="built_in">String</span>,</span><br><span class="line">    age: <span class="built_in">Number</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = mongoose.model(<span class="string">&#x27;Person&#x27;</span>, personSchema)</span><br></pre></td></tr></table></figure><h2 id="连接MOngoDB"><a href="#连接MOngoDB" class="headerlink" title="连接MOngoDB"></a>连接MOngoDB</h2><p><code>app.js</code>导入 mongoose 模块和配置模块并连接  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> dbConfig = <span class="built_in">require</span>(<span class="string">&#x27;./dbs/config&#x27;</span>)</span><br><span class="line">......</span><br><span class="line">mongoose.connect(dbConfig.dbs, &#123;</span><br><span class="line">  useNewUrlParser: <span class="literal">true</span>,</span><br><span class="line">  useUnifiedTopology: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="测试增删改查"><a href="#测试增删改查" class="headerlink" title="测试增删改查"></a>测试增删改查</h2><p>在项目默认生成的<code>uesrs.js</code>中写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查</span></span><br><span class="line">router.get(<span class="string">&#x27;/person&#x27;</span>, <span class="keyword">async</span> (ctx) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 通过用户名查询</span></span><br><span class="line">  <span class="comment">// const list = await Person.findOne(&#123;</span></span><br><span class="line">  <span class="comment">//   name: ctx.request.body.name</span></span><br><span class="line">  <span class="comment">// &#125;)</span></span><br><span class="line">  <span class="comment">// 查询所有</span></span><br><span class="line">  <span class="keyword">const</span> list = <span class="keyword">await</span> Person.find()</span><br><span class="line">  ctx.body = &#123;</span><br><span class="line">    list</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 增</span></span><br><span class="line">router.post(<span class="string">&#x27;/person&#x27;</span>, <span class="keyword">async</span> (ctx) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> person = <span class="keyword">new</span> Person(&#123;</span><br><span class="line">    name: ctx.request.body.name,</span><br><span class="line">    age: ctx.request.body.age</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">const</span> list = <span class="keyword">await</span> person.save()</span><br><span class="line">  ctx.body = &#123;</span><br><span class="line">    list</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 改</span></span><br><span class="line">router.put(<span class="string">&#x27;/person&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">  <span class="comment">// 通过用户名更改年龄</span></span><br><span class="line">  <span class="keyword">const</span> list = <span class="keyword">await</span> Person.where(&#123;</span><br><span class="line">    name: ctx.request.body.name</span><br><span class="line">  &#125;).update(&#123;</span><br><span class="line">    age: ctx.request.body.age</span><br><span class="line">  &#125;)</span><br><span class="line">  ctx.body = &#123;</span><br><span class="line">    list</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 删</span></span><br><span class="line">router.delete(<span class="string">&#x27;/person&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">  <span class="comment">// 通过用户名删除数据</span></span><br><span class="line">  <span class="keyword">const</span> list = <span class="keyword">await</span> Person.where(&#123;</span><br><span class="line">    name: ctx.request.body.name</span><br><span class="line">  &#125;).remove()</span><br><span class="line">  ctx.body = &#123;</span><br><span class="line">    list</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="postman-测试接口"><a href="#postman-测试接口" class="headerlink" title="postman 测试接口"></a>postman 测试接口</h2><h3 id="增："><a href="#增：" class="headerlink" title="增："></a>增：</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/flipped-cj/ImageHosting/img/20200718165225.png"></p><h3 id="改："><a href="#改：" class="headerlink" title="改："></a>改：</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/flipped-cj/ImageHosting/img/20200718165932.png"></p><h3 id="删："><a href="#删：" class="headerlink" title="删："></a>删：</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/flipped-cj/ImageHosting/img/20200718165715.png"></p><h3 id="查："><a href="#查：" class="headerlink" title="查："></a>查：</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/flipped-cj/ImageHosting/img/20200718170034.png"></p><h2 id="远程连接数据库"><a href="#远程连接数据库" class="headerlink" title="远程连接数据库"></a>远程连接数据库</h2><h3 id="数据库表中数据"><a href="#数据库表中数据" class="headerlink" title="数据库表中数据"></a>数据库表中数据</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/flipped-cj/ImageHosting/img/20200718170156.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="koa2" scheme="https://blog.flechazo.site/tags/koa2/"/>
    
  </entry>
  
  <entry>
    <title>在Koa中应用Redis数据库</title>
    <link href="https://blog.flechazo.site/posts/df3de1f1.html"/>
    <id>https://blog.flechazo.site/posts/df3de1f1.html</id>
    <published>2020-10-01T02:19:12.000Z</published>
    <updated>2020-10-01T02:22:20.635Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装node-redis"><a href="#安装node-redis" class="headerlink" title="安装node_redis"></a>安装<code>node_redis</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm i redis -S</span><br></pre></td></tr></table></figure><h2 id="连接Redis服务器"><a href="#连接Redis服务器" class="headerlink" title="连接Redis服务器"></a>连接Redis服务器</h2><p><img src= "/img/loading.gif" data-lazy-src="https://flechazo.oss-cn-beijing.aliyuncs.com/img/20200720231742.png" alt="启动redis本地服务"><br>接下来，在程序中引入node_redis包，并进行初始化  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> redis = <span class="built_in">require</span>(<span class="string">&#x27;redis&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> client = redis.createClient(<span class="number">6379</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line">client.on(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;ERROR:&#x27;</span> + err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上述代码连接了本地的 Redis 服务，并且通过 client 对象对 error 事件进行监听。连接 Redis 服务如果出错的话，则可以通过监听 error 事件捕捉到。</p><h2 id="操作-Redis-数据"><a href="#操作-Redis-数据" class="headerlink" title="操作 Redis 数据"></a>操作 Redis 数据</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">client.set(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;ikcamp&#x27;</span>, redis.print) <span class="comment">// redis.print 的作用是打印设置数据的结果。Reply: OK</span></span><br><span class="line">client.get(<span class="string">&#x27;name&#x27;</span>, <span class="function">(<span class="params">err, value</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;name:&#x27;</span> + value)  <span class="comment">// name:ikcamp</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>通过 client 对象的 <code>set</code> 和 <code>get</code> 方法就能在 Redis 中存取 String 类型的数据了</p><h3 id="用哈希（Hash）存取数据"><a href="#用哈希（Hash）存取数据" class="headerlink" title="用哈希（Hash）存取数据"></a>用哈希（Hash）存取数据</h3><p>存储对象的两种格式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">client.hmset(<span class="string">&#x27;it&#x27;</span>, &#123;</span><br><span class="line">  <span class="string">&#x27;vue&#x27;</span>: <span class="string">&#x27;good&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;node&#x27;</span>: <span class="string">&#x27;well&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">client.hmset(<span class="string">&#x27;it&#x27;</span>, <span class="string">&#x27;vue&#x27;</span>, <span class="string">&#x27;good&#x27;</span>, <span class="string">&#x27;node&#x27;</span>, <span class="string">&#x27;well&#x27;</span>)</span><br></pre></td></tr></table></figure><p>取出一个对象：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">client.hgetall(<span class="string">&#x27;it&#x27;</span>, <span class="function">(<span class="params">err, obj</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(obj)  <span class="comment">// &#123; vue: &#x27;good&#x27;, node: &#x27;well&#x27; &#125;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>获取哈希的 key：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">client.hkeys(<span class="string">&#x27;it&#x27;</span>, <span class="function">(<span class="params">err, replies</span>) =&gt;</span> &#123;</span><br><span class="line">  replies.forEach(<span class="function">(<span class="params">reply, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i + <span class="string">&#x27;:&#x27;</span> + reply)  <span class="comment">// 0:vue   1:node</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="用列表（List）存取数据"><a href="#用列表（List）存取数据" class="headerlink" title="用列表（List）存取数据"></a>用列表（List）存取数据</h3><p><code>lpush</code> 代表从左面添加数据，<code>rpush</code> 代表从右面添加数据<br><code>lpush</code> 可以获取参数 start 和 end 范围内的列表元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">client.lpush(<span class="string">&#x27;learn&#x27;</span>, <span class="string">&#x27;koa&#x27;</span>, redis.print)</span><br><span class="line">client.lpush(<span class="string">&#x27;learn&#x27;</span>, <span class="string">&#x27;express&#x27;</span>, redis.print)</span><br><span class="line">client.lrange(<span class="string">&#x27;learn&#x27;</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="function">(<span class="params">err, items</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err</span><br><span class="line">  <span class="built_in">console</span>.log(items) <span class="comment">// [ &#x27;express&#x27;, &#x27;koa&#x27; ]</span></span><br><span class="line">  items.forEach(<span class="function">(<span class="params">item, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i + <span class="string">&#x27;:&#x27;</span> + item)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面代码中，参数 end 为-1表明到列表中的最后一个元素，所以会取到列表中的所有元素。列表（List）类似于编程语言的数组，缺点是性能较差。随着列表的长度边长，获取数据的速度也会相应减慢。<br>上面代码最好每次执行完清空一下列表，不然会一直添加重复数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">client.del(<span class="string">&#x27;learn&#x27;</span>, <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err</span><br><span class="line">  <span class="built_in">console</span>.log(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="用集合（Set）存取数据"><a href="#用集合（Set）存取数据" class="headerlink" title="用集合（Set）存取数据"></a>用集合（Set）存取数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">client.sadd(<span class="string">&#x27;address&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, redis.print) <span class="comment">// 储存‘北京’</span></span><br><span class="line">client.sadd(<span class="string">&#x27;address&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, redis.print) <span class="comment">// 再次储存‘北京’</span></span><br><span class="line">client.sadd(<span class="string">&#x27;address&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>, redis.print) <span class="comment">// 储存‘上海’</span></span><br><span class="line">client.smembers(<span class="string">&#x27;address&#x27;</span>, <span class="function">(<span class="params">err, members</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err</span><br><span class="line">  <span class="built_in">console</span>.log(members) <span class="comment">// [ &#x27;北京&#x27;, &#x27;上海&#x27; ]</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面代码重复添加了‘北京’这个值，由于集合的特性，不会存取重复的值，所以第2次存储不会生效。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Node" scheme="https://blog.flechazo.site/categories/Node/"/>
    
    
    <category term="koa" scheme="https://blog.flechazo.site/tags/koa/"/>
    
    <category term="Redis" scheme="https://blog.flechazo.site/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>在Koa中应用Mysql数据库</title>
    <link href="https://blog.flechazo.site/posts/7bb68dd2.html"/>
    <id>https://blog.flechazo.site/posts/7bb68dd2.html</id>
    <published>2020-10-01T01:57:59.000Z</published>
    <updated>2020-10-01T02:02:57.305Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="sequelize-操作"><a href="#sequelize-操作" class="headerlink" title="sequelize 操作"></a>sequelize 操作</h2><h3 id="安装-sequelize-和-musql2-库"><a href="#安装-sequelize-和-musql2-库" class="headerlink" title="安装 sequelize 和 musql2 库"></a>安装 sequelize 和 musql2 库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm i sequelize mysql2 -S</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sequelize init</span><br></pre></td></tr></table></figure><p>会在根目录生成一些文件<br><img src= "/img/loading.gif" data-lazy-src="https://flechazo.oss-cn-beijing.aliyuncs.com/img/20200721022716.png"></p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>执行 <code>sequelize db:create --charset &#39;utf8mb4&#39;</code>，mysql 数据库会新建一个名为 <code>koa2-learn</code> 的数据库</p><h3 id="创建模型表"><a href="#创建模型表" class="headerlink" title="创建模型表"></a>创建模型表</h3><p><code>sequelize model:generate --name Customer --attributes name:string,age:integer</code></p><p>表名为 Customer 自定义两个字段：name 为字符类型，age 为数字类型</p><h3 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h3><p><code>sequelize db:migrate</code><br>数据库会新建一张表，其中字段：id、createdAt、updatedAt 为系统创建</p><h3 id="新建种子文件"><a href="#新建种子文件" class="headerlink" title="新建种子文件"></a>新建种子文件</h3><p><code>sequelize seed:generate --name customer</code><br>编辑文件<br><img src= "/img/loading.gif" data-lazy-src="https://flechazo.oss-cn-beijing.aliyuncs.com/img/20200721025032.png"></p><h3 id="迁移-1"><a href="#迁移-1" class="headerlink" title="迁移"></a>迁移</h3><p><code>sequelize db:seed:all</code><br>数据填充成功<br><img src= "/img/loading.gif" data-lazy-src="https://flechazo.oss-cn-beijing.aliyuncs.com/img/20200721025109.png"></p><h3 id="大致流程"><a href="#大致流程" class="headerlink" title="大致流程"></a>大致流程</h3><table><thead><tr><th>步骤</th><th>用法举例命令</th><th>说明</th></tr></thead><tbody><tr><td>第一步</td><td>sequelize model:generate –name Customer –attributes …</td><td>建模型和迁移文件</td></tr><tr><td>第二步</td><td>人工处理</td><td>根据需求调整模型和迁移文件</td></tr><tr><td>第三步</td><td>sequelize db:migrate</td><td>运行迁移，生成数据表</td></tr><tr><td>第四步</td><td>sequelize seed:generate –name</td><td>新建种子文件</td></tr><tr><td>第五步</td><td>人工处理</td><td>将种子文件修改为自己想填充的数据</td></tr><tr><td>第六步</td><td>sequelize db:seed:all</td><td>运行种子文件，将默认数据填充到数据表中</td></tr></tbody></table><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="新建一个名为-customer-的路由"><a href="#新建一个名为-customer-的路由" class="headerlink" title="新建一个名为 customer 的路由"></a>新建一个名为 <code>customer</code> 的路由</h3><p>导入 <code>models</code>， 查询测试</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> models = <span class="built_in">require</span>(<span class="string">&#x27;../models&#x27;</span>)</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> customer = <span class="keyword">await</span> models.Customer.findAndCountAll()</span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">        customer</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>postman 请求返回数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;customer&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;count&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;rows&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;age&quot;</span>: <span class="number">22</span>,</span><br><span class="line">        <span class="attr">&quot;createdAt&quot;</span>: <span class="string">&quot;2020-07-20T18:48:10.000Z&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;updatedAt&quot;</span>: <span class="string">&quot;2020-07-20T18:48:10.000Z&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;flipped&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;age&quot;</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="attr">&quot;createdAt&quot;</span>: <span class="string">&quot;2020-07-20T18:48:10.000Z&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;updatedAt&quot;</span>: <span class="string">&quot;2020-07-20T18:48:10.000Z&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> customer = <span class="keyword">await</span> Customer.create(ctx.request.body)</span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">        customer</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>返回数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;customer&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;22&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;updatedAt&quot;</span>: <span class="string">&quot;2020-07-20T19:16:32.885Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;createdAt&quot;</span>: <span class="string">&quot;2020-07-20T19:16:32.885Z&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通过-id-查询"><a href="#通过-id-查询" class="headerlink" title="通过 id 查询"></a>通过 id 查询</h3><p>请求地址：<code>http://localhost:3000/customer/2</code> </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">router.get(<span class="string">&#x27;/:id&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; id &#125; = ctx.params</span><br><span class="line">    <span class="keyword">const</span> customer = <span class="keyword">await</span> models.Customer.findByPk(id)</span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">        customer</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>返回数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;customer&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;flipped&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">&quot;createdAt&quot;</span>: <span class="string">&quot;2020-07-20T18:48:10.000Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;updatedAt&quot;</span>: <span class="string">&quot;2020-07-20T18:48:10.000Z&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><p>请求地址：<code>http://localhost:3000/customer/1</code>  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">router.put(<span class="string">&#x27;/:id&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; id &#125; = ctx.params</span><br><span class="line">    <span class="keyword">const</span> customer = <span class="keyword">await</span> models.Customer.findByPk(id)</span><br><span class="line">    customer.update(ctx.request.body)</span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">        customer</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>返回数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;customer&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;cc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;createdAt&quot;</span>: <span class="string">&quot;2020-07-20T18:48:10.000Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;updatedAt&quot;</span>: <span class="string">&quot;2020-07-20T19:33:56.542Z&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><p>请求地址：<code>http://localhost:3000/customer/4</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">router.delete(<span class="string">&#x27;/:id&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; id &#125; = ctx.params</span><br><span class="line">    <span class="keyword">const</span> customer = <span class="keyword">await</span> models.Customer.findByPk(id)</span><br><span class="line">    customer.destroy()</span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">        customer</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>返回数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;customer&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;sjdhadj&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;createdAt&quot;</span>: <span class="string">&quot;2020-07-20T19:38:11.000Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;updatedAt&quot;</span>: <span class="string">&quot;2020-07-20T19:38:11.000Z&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Node" scheme="https://blog.flechazo.site/categories/Node/"/>
    
    
    <category term="koa" scheme="https://blog.flechazo.site/tags/koa/"/>
    
    <category term="Mysql" scheme="https://blog.flechazo.site/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://blog.flechazo.site/posts/d87f7e0c.html"/>
    <id>https://blog.flechazo.site/posts/d87f7e0c.html</id>
    <published>2020-08-20T22:03:20.000Z</published>
    <updated>2020-08-21T22:47:54.902Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><p>测试的文章</p></li><li><p>测试的文章2</p><ul><li>1111111</li><li>222222</li><li>3627643</li></ul></li></ul><div class="note default">            <p>default 提示块标籤</p>          </div><div class="note primary no-icon">            <p>primary 提示块标籤</p>          </div><div class="note success">            <p>success 提示块标籤</p>          </div><div class="note info">            <p>info 提示块标籤</p>          </div><div class="note warning">            <p>warning 提示块标籤</p>          </div><div class="note danger">            <p>danger 提示块标籤</p>          </div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="test" scheme="https://blog.flechazo.site/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>koa2实现文件上传功能</title>
    <link href="https://blog.flechazo.site/posts/f1302dbb.html"/>
    <id>https://blog.flechazo.site/posts/f1302dbb.html</id>
    <published>2020-08-20T13:35:33.000Z</published>
    <updated>2020-08-21T00:08:01.985Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="安装：koa-multer"><a href="#安装：koa-multer" class="headerlink" title="安装：koa/multer"></a>安装：koa/multer</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save @koa/multer multer</span><br></pre></td></tr></table></figure><h3 id="koa-generator-生成基本的目录结构"><a href="#koa-generator-生成基本的目录结构" class="headerlink" title="koa-generator 生成基本的目录结构"></a>koa-generator 生成基本的目录结构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">koa2 -e koa2-demo</span><br><span class="line"><span class="built_in">cd</span> koa2-demo</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><h3 id="新建一个-upload-路由并导入"><a href="#新建一个-upload-路由并导入" class="headerlink" title="新建一个 upload 路由并导入"></a>新建一个 upload 路由并导入</h3><p>public 目录下创建 upload 文件夹，用于存放上传的文件</p><h4 id="upload-js"><a href="#upload-js" class="headerlink" title="upload.js:"></a>upload.js:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">&#x27;@koa/multer&#x27;</span>)</span><br><span class="line">......</span><br><span class="line"><span class="keyword">const</span> storage = multer.diskStorage(&#123;</span><br><span class="line">    <span class="comment">//文件保存路径</span></span><br><span class="line">    destination: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        cb(<span class="literal">null</span>, <span class="string">&#x27;public/uploads/&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//修改文件名称</span></span><br><span class="line">    filename: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// var fileFormat = (file.originalname).split(&quot;.&quot;).pop()</span></span><br><span class="line">        <span class="comment">// cb(null, Date.now() + &quot;.&quot; + fileFormat)</span></span><br><span class="line">        cb(<span class="literal">null</span>, file.originalname)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> upload = multer(&#123;</span><br><span class="line">    storage: storage</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.post(</span><br><span class="line">    <span class="string">&#x27;/multiple&#x27;</span>,</span><br><span class="line">    upload.fields([&#123;</span><br><span class="line">            name: <span class="string">&#x27;avatar&#x27;</span>,</span><br><span class="line">            maxCount: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">&#x27;images&#x27;</span>,</span><br><span class="line">            maxCount: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]),</span><br><span class="line">    ctx =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> images = []</span><br><span class="line">        ctx.request.files.images.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> imageUrl = <span class="string">`<span class="subst">$&#123;ctx.origin&#125;</span>/uploads/<span class="subst">$&#123;item.filename&#125;</span>`</span></span><br><span class="line">            images.push(imageUrl)</span><br><span class="line">            <span class="comment">// const newImg = new Image(&#123;</span></span><br><span class="line">            <span class="comment">//     imageUrl</span></span><br><span class="line">            <span class="comment">// &#125;)</span></span><br><span class="line">            <span class="comment">// newImg.save()</span></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        ctx.body = &#123;</span><br><span class="line">            images</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">router.post(</span><br><span class="line">    <span class="string">&#x27;/single&#x27;</span>,</span><br><span class="line">    upload.single(<span class="string">&#x27;image&#x27;</span>),</span><br><span class="line">    ctx =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> imageUrl = <span class="string">`<span class="subst">$&#123;ctx.origin&#125;</span>/uploads/<span class="subst">$&#123;ctx.file.filename&#125;</span>`</span></span><br><span class="line">        <span class="comment">// const newImg = new Image(&#123;</span></span><br><span class="line">        <span class="comment">//     imageUrl</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="comment">// newImg.save()</span></span><br><span class="line">        ctx.body = &#123;</span><br><span class="line">            image: imageUrl</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>修改文件名称可以用时间戳命名，不过多文件上传会出现问题，如果两个文件同时上传成功，文件名可能会一样，就导致只成功上传一个文件</p><p>注释掉的是我写入数据库的代码，用的 mongodb ，挺简单的，就写了两个字段<br><img src= "/img/loading.gif" data-lazy-src="https://flechazo.oss-cn-beijing.aliyuncs.com/img/20200819100745.png"></p><h4 id="Image-js"><a href="#Image-js" class="headerlink" title="Image.js:"></a>Image.js:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Schema = mongoose.Schema</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ImageSchema = <span class="keyword">new</span> Schema(&#123;</span><br><span class="line">    imageUrl: &#123;</span><br><span class="line">        type: <span class="built_in">String</span></span><br><span class="line">    &#125;,</span><br><span class="line">    date: &#123;</span><br><span class="line">        type: <span class="built_in">Date</span>,</span><br><span class="line">        <span class="keyword">default</span>: <span class="built_in">Date</span>.now</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = Image = mongoose.model(<span class="string">&#x27;images&#x27;</span>, ImageSchema)</span><br></pre></td></tr></table></figure><h4 id="upload-js完整代码："><a href="#upload-js完整代码：" class="headerlink" title="upload.js完整代码："></a>upload.js完整代码：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="built_in">require</span>(<span class="string">&#x27;koa-router&#x27;</span>)()</span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">&#x27;@koa/multer&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> Image = <span class="built_in">require</span>(<span class="string">&#x27;../models/Image&#x27;</span>)</span><br><span class="line"></span><br><span class="line">router.prefix(<span class="string">&#x27;/upload&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> storage = multer.diskStorage(&#123;</span><br><span class="line">    <span class="comment">//文件保存路径</span></span><br><span class="line">    destination: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        cb(<span class="literal">null</span>, <span class="string">&#x27;public/uploads/&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//修改文件名称</span></span><br><span class="line">    filename: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// var fileFormat = (file.originalname).split(&quot;.&quot;).pop()</span></span><br><span class="line">        <span class="comment">// cb(null, Date.now() + &quot;.&quot; + fileFormat)</span></span><br><span class="line">        cb(<span class="literal">null</span>, file.originalname)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> upload = multer(&#123;</span><br><span class="line">    storage: storage</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> images = <span class="keyword">await</span> Image.find()</span><br><span class="line">    <span class="keyword">const</span> total = <span class="keyword">await</span> Image.estimatedDocumentCount()</span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">        total,</span><br><span class="line">        images</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.post(</span><br><span class="line">    <span class="string">&#x27;/multiple&#x27;</span>,</span><br><span class="line">    upload.fields([&#123;</span><br><span class="line">            name: <span class="string">&#x27;avatar&#x27;</span>,</span><br><span class="line">            maxCount: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">&#x27;images&#x27;</span>,</span><br><span class="line">            maxCount: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]),</span><br><span class="line">    ctx =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> images = []</span><br><span class="line">        ctx.request.files.images.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> imageUrl = <span class="string">`<span class="subst">$&#123;ctx.origin&#125;</span>/uploads/<span class="subst">$&#123;item.filename&#125;</span>`</span></span><br><span class="line">            images.push(imageUrl)</span><br><span class="line">            <span class="comment">// const newImg = new Image(&#123;</span></span><br><span class="line">            <span class="comment">//     imageUrl</span></span><br><span class="line">            <span class="comment">// &#125;)</span></span><br><span class="line">            <span class="comment">// newImg.save()</span></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        ctx.body = &#123;</span><br><span class="line">            images</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">router.post(</span><br><span class="line">    <span class="string">&#x27;/single&#x27;</span>,</span><br><span class="line">    upload.single(<span class="string">&#x27;image&#x27;</span>),</span><br><span class="line">    ctx =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> imageUrl = <span class="string">`<span class="subst">$&#123;ctx.origin&#125;</span>/uploads/<span class="subst">$&#123;ctx.file.filename&#125;</span>`</span></span><br><span class="line">        <span class="comment">// const newImg = new Image(&#123;</span></span><br><span class="line">        <span class="comment">//     imageUrl</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="comment">// newImg.save()</span></span><br><span class="line">        ctx.body = &#123;</span><br><span class="line">            image: imageUrl</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure><h3 id="上传示例"><a href="#上传示例" class="headerlink" title="上传示例"></a>上传示例</h3><h4 id="多文件上传"><a href="#多文件上传" class="headerlink" title="多文件上传"></a>多文件上传</h4><p><img src= "/img/loading.gif" data-lazy-src="https://flechazo.oss-cn-beijing.aliyuncs.com/img/20200819094856.png"></p><h4 id="单文件上传"><a href="#单文件上传" class="headerlink" title="单文件上传"></a>单文件上传</h4><p><img src= "/img/loading.gif" data-lazy-src="https://flechazo.oss-cn-beijing.aliyuncs.com/img/20200819094938.png"></p><p>由于我存储到了数据库, 所以可以很方便的查询到上传的文件<br>get访问 <a href="http://localhost:3000/upload">http://localhost:3000/upload</a></p><p>示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;total&quot;</span>: <span class="number">8</span>,</span><br><span class="line">  <span class="attr">&quot;images&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;5f3c34c4cdff9d4e948e2a62&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;imageUrl&quot;</span>: <span class="string">&quot;http://localhost:3000/uploads/avatar.jpg&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2020-08-18T20:06:28.354Z&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;__v&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;5f3c34c4cdff9d4e948e2a63&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;imageUrl&quot;</span>: <span class="string">&quot;http://localhost:3000/uploads/wallhaven-5we787.jpg&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2020-08-18T20:06:28.356Z&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;__v&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;5f3c3562552ba94ef0134274&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;imageUrl&quot;</span>: <span class="string">&quot;http://localhost:3000/uploads/wallhaven-g8yyee.jpg&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2020-08-18T20:09:06.463Z&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;__v&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;5f3c35ea552ba94ef0134275&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;imageUrl&quot;</span>: <span class="string">&quot;http://localhost:3000/uploads/wallhaven-5we8y5.jpg&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2020-08-18T20:11:22.868Z&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;__v&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;5f3c35ea552ba94ef0134276&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;imageUrl&quot;</span>: <span class="string">&quot;http://localhost:3000/uploads/wallhaven-r28m57.jpg&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2020-08-18T20:11:22.869Z&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;__v&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;5f3c84df1ec84a28b096a2f7&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;imageUrl&quot;</span>: <span class="string">&quot;http://localhost:3000/uploads/wallhaven-135y9g.jpg&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2020-08-19T01:48:15.005Z&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;__v&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;5f3c84df1ec84a28b096a2f8&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;imageUrl&quot;</span>: <span class="string">&quot;http://localhost:3000/uploads/wallhaven-md7x2y.jpg&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2020-08-19T01:48:15.006Z&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;__v&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;5f3c852a1ec84a28b096a2f9&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;imageUrl&quot;</span>: <span class="string">&quot;http://localhost:3000/uploads/wallhaven-zmweqj.jpg&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;2020-08-19T01:49:30.673Z&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;__v&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随便打开一张图都是没有问题的</p><p><img src= "/img/loading.gif" data-lazy-src="https://flechazo.oss-cn-beijing.aliyuncs.com/img/20200819095205.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Node" scheme="https://blog.flechazo.site/categories/Node/"/>
    
    
    <category term="koa2" scheme="https://blog.flechazo.site/tags/koa2/"/>
    
    <category term="koa/multer" scheme="https://blog.flechazo.site/tags/koa-multer/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.flechazo.site/posts/4a17b156.html"/>
    <id>https://blog.flechazo.site/posts/4a17b156.html</id>
    <published>2020-08-20T11:42:25.490Z</published>
    <updated>2020-08-21T22:47:25.630Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
